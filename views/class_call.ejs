<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script>
      const ROOM_ID = "<%= roomId %>";
    </script>
    <script src="https://unpkg.com/peerjs@1.4.7/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js" defer></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- <script src="/script.js" defer></script> -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.2/p5.min.js"
      integrity="sha512-rCZdHNB0AePry6kAnKAVFMRfWPmUXSo+/vlGtrOUvhsxD0Punm/xWbEh+8vppPIOzKB9xnk42yCRZ5MD/jvvjQ=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script src="https://cdn.jsdelivr.net/gh/IDMNYU/p5.js-speech@0.0.3/lib/p5.speech.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css"
    />
    <script
      src="https://kit.fontawesome.com/825a35d965.js"
      crossorigin="anonymous"
    ></script>
    <title>Document</title>
    <style>
      *,
      *::before,
      *::after {
        box-sizing: border-box;
        padding: 0;
        margin: 0;
      }

      :root {
        --background-color: rgb(51 65 85);
        --text-color: #ffffff;
        --accent-color: #ef3124;
        --button-color: #343c76;
        --button-hover-color: #2a305e;
      }

      body {
        background: var(--background-color);
        font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
          sans-serif;
        color: var(--text-color);
        height: 100vh;
        height: calc(var(--vh, 1vh) * 100);
      }

      .height {
        height: 100vh;
        height: calc(var(--vh, 1vh) * 100);
      }

      #video-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, 300px);
        grid-auto-rows: 300px;
      }

      .me {
        align-self: flex-end;
        background-color: rgb(14 116 144);
      }
      .other {
        align-self: flex-start;
        background-color: rgb(55 65 81);
      }

      .bubble {
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        width: fit-content;
        white-space: pre-wrap;
      }

      video {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      i {
        line-height: 0;
      }
    </style>
  </head>
  <body class="height">
    <!--UI-->
    <!--block out interface to look like its on a mobile device-->
    <div
      class="container max-w-md mx-auto bg-slate-800 w-full aspect-square height flex flex-col gap-3 px-5 py-7 items-stretch"
    >
      <div class="flex flex-col justify-center items-center h-full">
        <!--header-->
        <div class="mx-auto py-2">LOGO</div>

        <!--video box-->
        <!-- <iframe></iframe> -->

        <!--transcript bubbles-->
        <div
          class="py-3 overflow-x-hidden overflow-y-auto w-full h-1/2 whitespace-nowrap px-6 flex flex-col gap-2"
          id="transcript"
        ></div>

        <!--end button-->
        <footer class="bg-gray-800 mt-auto py-2 flex justify-center">
          <button
            class="bg-red-500 hover:bg-red-900 text-white font-bold py-2 px-5 rounded-full"
            onclick="window.location='/class/enter'"
          >
            End
          </button>
        </footer>
      </div>
    </div>

    <!-- <button id="start">Start</button>
    <button id="stop">Stop</button> -->
    <script>
      let vh = 0.01 * window.innerHeight;
      document.documentElement.style.setProperty("--vh", vh + "px");
    </script>
    <script>
      let speechRec = new p5.SpeechRec("en-US", gotSpeech);
      var transcriptDiv = document.getElementById("transcript");

      function gotSpeech() {
        if (speechRec.resultValue) {
          console.log(speechRec);
          let d = document.createElement("div");
          d.textContent = speechRec.resultString;
          d.classList.add("bubble");
          if (transcriptDiv.children.length < 1) {
            d.classList.add("mt-auto");
          }
          d.classList.add("other");
          transcriptDiv.appendChild(d);
          transcriptDiv.scrollTo(0, transcriptDiv.scrollHeight);
        }
      }

      let continuous = true;
      let interim = true;
      speechRec.start(continuous, interim);
    </script>
  </body>
</html>
